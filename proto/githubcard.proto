syntax = "proto3";

package githubcard;

option go_package = "github.com/brotherlogic/githubcard/proto";

message Token {
  string token = 1;
}

message Silence {
  string silence = 1;
  string origin = 2;
}

message Config {
  repeated Silence silences = 1;
  repeated string jobs_of_interest = 2;
  string externalIP = 3;
  repeated Issue issues = 4;
  map<string, string> title_to_issue = 5;
}

message Issue {
  string title = 1;
  string body = 2;
  string service = 3;
  int32 number = 4;
  
  enum IssueState {
    OPEN = 0;
    CLOSED = 1;
  }
  IssueState state = 5;
  
  bool sticky = 6;

  enum Origin {
    UNKNOWN = 0;
    FROM_WEB = 1;
    FROM_RECEIVER = 2;
  }
  Origin origin = 7;

  int64 date_added = 8;

  string url = 9;

  int32 milestone_number = 10;

  bool print_immediately = 11;
  int64 print_id = 12;

  repeated string subscribers = 13;

  int64 uid = 14;
}

message IssueList {
  repeated Issue issues = 1;
}

message SilenceRequest {
  enum SilenceState {
    UNKNOWN = 0;
    SILENCE = 1;
    UNSILENCE = 2;
  }
  string silence = 1;
  string origin = 3;
  SilenceState state = 2;
}

message SilenceResponse {}

message GetAllRequest {
  bool latest_only = 1;
  repeated string avoid = 2;
}

message GetAllResponse {
  repeated Issue issues = 1;
}

message RegisterRequest {
  string job = 1;
}

message RegisterResponse {}

message DeleteRequest {
  Issue issue = 1;
}

message DeleteResponse {}

message PullRequest{
  string job = 1;
  string branch = 2;
  string title = 3;
  int32 pull_number = 4;
}

message PullResponse {
  int32 number_of_commits = 1;
  bool is_open = 2;
}

message CloseRequest {
  string job = 1;
  int32 pull_number = 2;
  string sha = 3;
  string branch_name = 4;
}

message AddMilestoneRequest {
  string title = 1;
  string description = 3;
  string repo = 4;
}

message AddMilestoneResponse {
  int32 number = 1;
}

message UpdateMilestoneRequest {
  int32 number = 1;
  string repo = 2;
  string state = 3;
}

message UpdateMilestoneResponse {}

message CloseResponse{}

message ConfigureRequest{
  string external_ip = 1;
}

message ConfigureResponse{}

service Github {
  rpc Configure(ConfigureRequest) returns (ConfigureResponse) {};
  rpc AddIssue(Issue) returns (Issue) {};
  rpc Get(Issue) returns (Issue) {};
  rpc GetAll(GetAllRequest) returns (GetAllResponse) {};
  rpc Silence(SilenceRequest) returns (SilenceResponse) {};
  rpc RegisterJob(RegisterRequest) returns (RegisterResponse) {};
  rpc DeleteIssue(DeleteRequest) returns (DeleteResponse) {};
  rpc CreatePullRequest(PullRequest) returns (PullResponse) {};
  rpc GetPullRequest(PullRequest) returns (PullResponse) {};
  rpc ClosePullRequest(CloseRequest) returns (CloseResponse) {};
  rpc AddMilestone(AddMilestoneRequest) returns (AddMilestoneResponse) {};
  rpc UpdateMilestone (UpdateMilestoneRequest) returns (UpdateMilestoneResponse) {};
}

message ChangeUpdateRequest {
  Issue issue = 1;
}

message ChangeUpdateResponse {}

service GithubSubscriber {
  rpc ChangeUpdate(ChangeUpdateRequest) returns (ChangeUpdateResponse) {};
}
