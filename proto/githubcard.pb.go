// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: githubcard.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Issue_IssueState int32

const (
	Issue_OPEN   Issue_IssueState = 0
	Issue_CLOSED Issue_IssueState = 1
)

// Enum value maps for Issue_IssueState.
var (
	Issue_IssueState_name = map[int32]string{
		0: "OPEN",
		1: "CLOSED",
	}
	Issue_IssueState_value = map[string]int32{
		"OPEN":   0,
		"CLOSED": 1,
	}
)

func (x Issue_IssueState) Enum() *Issue_IssueState {
	p := new(Issue_IssueState)
	*p = x
	return p
}

func (x Issue_IssueState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Issue_IssueState) Descriptor() protoreflect.EnumDescriptor {
	return file_githubcard_proto_enumTypes[0].Descriptor()
}

func (Issue_IssueState) Type() protoreflect.EnumType {
	return &file_githubcard_proto_enumTypes[0]
}

func (x Issue_IssueState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Issue_IssueState.Descriptor instead.
func (Issue_IssueState) EnumDescriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{3, 0}
}

type Issue_Origin int32

const (
	Issue_UNKNOWN       Issue_Origin = 0
	Issue_FROM_WEB      Issue_Origin = 1
	Issue_FROM_RECEIVER Issue_Origin = 2
)

// Enum value maps for Issue_Origin.
var (
	Issue_Origin_name = map[int32]string{
		0: "UNKNOWN",
		1: "FROM_WEB",
		2: "FROM_RECEIVER",
	}
	Issue_Origin_value = map[string]int32{
		"UNKNOWN":       0,
		"FROM_WEB":      1,
		"FROM_RECEIVER": 2,
	}
)

func (x Issue_Origin) Enum() *Issue_Origin {
	p := new(Issue_Origin)
	*p = x
	return p
}

func (x Issue_Origin) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Issue_Origin) Descriptor() protoreflect.EnumDescriptor {
	return file_githubcard_proto_enumTypes[1].Descriptor()
}

func (Issue_Origin) Type() protoreflect.EnumType {
	return &file_githubcard_proto_enumTypes[1]
}

func (x Issue_Origin) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Issue_Origin.Descriptor instead.
func (Issue_Origin) EnumDescriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{3, 1}
}

type SilenceRequest_SilenceState int32

const (
	SilenceRequest_UNKNOWN   SilenceRequest_SilenceState = 0
	SilenceRequest_SILENCE   SilenceRequest_SilenceState = 1
	SilenceRequest_UNSILENCE SilenceRequest_SilenceState = 2
)

// Enum value maps for SilenceRequest_SilenceState.
var (
	SilenceRequest_SilenceState_name = map[int32]string{
		0: "UNKNOWN",
		1: "SILENCE",
		2: "UNSILENCE",
	}
	SilenceRequest_SilenceState_value = map[string]int32{
		"UNKNOWN":   0,
		"SILENCE":   1,
		"UNSILENCE": 2,
	}
)

func (x SilenceRequest_SilenceState) Enum() *SilenceRequest_SilenceState {
	p := new(SilenceRequest_SilenceState)
	*p = x
	return p
}

func (x SilenceRequest_SilenceState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SilenceRequest_SilenceState) Descriptor() protoreflect.EnumDescriptor {
	return file_githubcard_proto_enumTypes[2].Descriptor()
}

func (SilenceRequest_SilenceState) Type() protoreflect.EnumType {
	return &file_githubcard_proto_enumTypes[2]
}

func (x SilenceRequest_SilenceState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SilenceRequest_SilenceState.Descriptor instead.
func (SilenceRequest_SilenceState) EnumDescriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{5, 0}
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{0}
}

func (x *Token) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Silence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Silence string `protobuf:"bytes,1,opt,name=silence,proto3" json:"silence,omitempty"`
	Origin  string `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *Silence) Reset() {
	*x = Silence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Silence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Silence) ProtoMessage() {}

func (x *Silence) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Silence.ProtoReflect.Descriptor instead.
func (*Silence) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{1}
}

func (x *Silence) GetSilence() string {
	if x != nil {
		return x.Silence
	}
	return ""
}

func (x *Silence) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Silences       []*Silence        `protobuf:"bytes,1,rep,name=silences,proto3" json:"silences,omitempty"`
	JobsOfInterest []string          `protobuf:"bytes,2,rep,name=jobs_of_interest,json=jobsOfInterest,proto3" json:"jobs_of_interest,omitempty"`
	ExternalIP     string            `protobuf:"bytes,3,opt,name=externalIP,proto3" json:"externalIP,omitempty"`
	Issues         []*Issue          `protobuf:"bytes,4,rep,name=issues,proto3" json:"issues,omitempty"`
	TitleToIssue   map[string]string `protobuf:"bytes,5,rep,name=title_to_issue,json=titleToIssue,proto3" json:"title_to_issue,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{2}
}

func (x *Config) GetSilences() []*Silence {
	if x != nil {
		return x.Silences
	}
	return nil
}

func (x *Config) GetJobsOfInterest() []string {
	if x != nil {
		return x.JobsOfInterest
	}
	return nil
}

func (x *Config) GetExternalIP() string {
	if x != nil {
		return x.ExternalIP
	}
	return ""
}

func (x *Config) GetIssues() []*Issue {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *Config) GetTitleToIssue() map[string]string {
	if x != nil {
		return x.TitleToIssue
	}
	return nil
}

type Issue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title            string           `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Body             string           `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Service          string           `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	Number           int32            `protobuf:"varint,4,opt,name=number,proto3" json:"number,omitempty"`
	State            Issue_IssueState `protobuf:"varint,5,opt,name=state,proto3,enum=githubcard.Issue_IssueState" json:"state,omitempty"`
	Sticky           bool             `protobuf:"varint,6,opt,name=sticky,proto3" json:"sticky,omitempty"`
	Origin           Issue_Origin     `protobuf:"varint,7,opt,name=origin,proto3,enum=githubcard.Issue_Origin" json:"origin,omitempty"`
	DateAdded        int64            `protobuf:"varint,8,opt,name=date_added,json=dateAdded,proto3" json:"date_added,omitempty"`
	Url              string           `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	MilestoneNumber  int32            `protobuf:"varint,10,opt,name=milestone_number,json=milestoneNumber,proto3" json:"milestone_number,omitempty"`
	PrintImmediately bool             `protobuf:"varint,11,opt,name=print_immediately,json=printImmediately,proto3" json:"print_immediately,omitempty"`
}

func (x *Issue) Reset() {
	*x = Issue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Issue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Issue) ProtoMessage() {}

func (x *Issue) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Issue.ProtoReflect.Descriptor instead.
func (*Issue) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{3}
}

func (x *Issue) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Issue) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Issue) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Issue) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Issue) GetState() Issue_IssueState {
	if x != nil {
		return x.State
	}
	return Issue_OPEN
}

func (x *Issue) GetSticky() bool {
	if x != nil {
		return x.Sticky
	}
	return false
}

func (x *Issue) GetOrigin() Issue_Origin {
	if x != nil {
		return x.Origin
	}
	return Issue_UNKNOWN
}

func (x *Issue) GetDateAdded() int64 {
	if x != nil {
		return x.DateAdded
	}
	return 0
}

func (x *Issue) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Issue) GetMilestoneNumber() int32 {
	if x != nil {
		return x.MilestoneNumber
	}
	return 0
}

func (x *Issue) GetPrintImmediately() bool {
	if x != nil {
		return x.PrintImmediately
	}
	return false
}

type IssueList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Issues []*Issue `protobuf:"bytes,1,rep,name=issues,proto3" json:"issues,omitempty"`
}

func (x *IssueList) Reset() {
	*x = IssueList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueList) ProtoMessage() {}

func (x *IssueList) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueList.ProtoReflect.Descriptor instead.
func (*IssueList) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{4}
}

func (x *IssueList) GetIssues() []*Issue {
	if x != nil {
		return x.Issues
	}
	return nil
}

type SilenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Silence string                      `protobuf:"bytes,1,opt,name=silence,proto3" json:"silence,omitempty"`
	Origin  string                      `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	State   SilenceRequest_SilenceState `protobuf:"varint,2,opt,name=state,proto3,enum=githubcard.SilenceRequest_SilenceState" json:"state,omitempty"`
}

func (x *SilenceRequest) Reset() {
	*x = SilenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SilenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SilenceRequest) ProtoMessage() {}

func (x *SilenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SilenceRequest.ProtoReflect.Descriptor instead.
func (*SilenceRequest) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{5}
}

func (x *SilenceRequest) GetSilence() string {
	if x != nil {
		return x.Silence
	}
	return ""
}

func (x *SilenceRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *SilenceRequest) GetState() SilenceRequest_SilenceState {
	if x != nil {
		return x.State
	}
	return SilenceRequest_UNKNOWN
}

type SilenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SilenceResponse) Reset() {
	*x = SilenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SilenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SilenceResponse) ProtoMessage() {}

func (x *SilenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SilenceResponse.ProtoReflect.Descriptor instead.
func (*SilenceResponse) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{6}
}

type GetAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatestOnly bool     `protobuf:"varint,1,opt,name=latest_only,json=latestOnly,proto3" json:"latest_only,omitempty"`
	Avoid      []string `protobuf:"bytes,2,rep,name=avoid,proto3" json:"avoid,omitempty"`
}

func (x *GetAllRequest) Reset() {
	*x = GetAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRequest) ProtoMessage() {}

func (x *GetAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRequest.ProtoReflect.Descriptor instead.
func (*GetAllRequest) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{7}
}

func (x *GetAllRequest) GetLatestOnly() bool {
	if x != nil {
		return x.LatestOnly
	}
	return false
}

func (x *GetAllRequest) GetAvoid() []string {
	if x != nil {
		return x.Avoid
	}
	return nil
}

type GetAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Issues []*Issue `protobuf:"bytes,1,rep,name=issues,proto3" json:"issues,omitempty"`
}

func (x *GetAllResponse) Reset() {
	*x = GetAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllResponse) ProtoMessage() {}

func (x *GetAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllResponse.ProtoReflect.Descriptor instead.
func (*GetAllResponse) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllResponse) GetIssues() []*Issue {
	if x != nil {
		return x.Issues
	}
	return nil
}

type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job string `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{9}
}

func (x *RegisterRequest) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{10}
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Issue *Issue `protobuf:"bytes,1,opt,name=issue,proto3" json:"issue,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteRequest) GetIssue() *Issue {
	if x != nil {
		return x.Issue
	}
	return nil
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{12}
}

type PullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job        string `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Branch     string `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
	Title      string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	PullNumber int32  `protobuf:"varint,4,opt,name=pull_number,json=pullNumber,proto3" json:"pull_number,omitempty"`
}

func (x *PullRequest) Reset() {
	*x = PullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequest) ProtoMessage() {}

func (x *PullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequest.ProtoReflect.Descriptor instead.
func (*PullRequest) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{13}
}

func (x *PullRequest) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *PullRequest) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *PullRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PullRequest) GetPullNumber() int32 {
	if x != nil {
		return x.PullNumber
	}
	return 0
}

type PullResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumberOfCommits int32 `protobuf:"varint,1,opt,name=number_of_commits,json=numberOfCommits,proto3" json:"number_of_commits,omitempty"`
	IsOpen          bool  `protobuf:"varint,2,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
}

func (x *PullResponse) Reset() {
	*x = PullResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullResponse) ProtoMessage() {}

func (x *PullResponse) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullResponse.ProtoReflect.Descriptor instead.
func (*PullResponse) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{14}
}

func (x *PullResponse) GetNumberOfCommits() int32 {
	if x != nil {
		return x.NumberOfCommits
	}
	return 0
}

func (x *PullResponse) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

type CloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job        string `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	PullNumber int32  `protobuf:"varint,2,opt,name=pull_number,json=pullNumber,proto3" json:"pull_number,omitempty"`
	Sha        string `protobuf:"bytes,3,opt,name=sha,proto3" json:"sha,omitempty"`
	BranchName string `protobuf:"bytes,4,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
}

func (x *CloseRequest) Reset() {
	*x = CloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest) ProtoMessage() {}

func (x *CloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest.ProtoReflect.Descriptor instead.
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{15}
}

func (x *CloseRequest) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *CloseRequest) GetPullNumber() int32 {
	if x != nil {
		return x.PullNumber
	}
	return 0
}

func (x *CloseRequest) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *CloseRequest) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

type AddMilestoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Repo        string `protobuf:"bytes,4,opt,name=repo,proto3" json:"repo,omitempty"`
}

func (x *AddMilestoneRequest) Reset() {
	*x = AddMilestoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMilestoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMilestoneRequest) ProtoMessage() {}

func (x *AddMilestoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMilestoneRequest.ProtoReflect.Descriptor instead.
func (*AddMilestoneRequest) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{16}
}

func (x *AddMilestoneRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddMilestoneRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddMilestoneRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

type AddMilestoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *AddMilestoneResponse) Reset() {
	*x = AddMilestoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMilestoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMilestoneResponse) ProtoMessage() {}

func (x *AddMilestoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMilestoneResponse.ProtoReflect.Descriptor instead.
func (*AddMilestoneResponse) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{17}
}

func (x *AddMilestoneResponse) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type UpdateMilestoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int32  `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Repo   string `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	State  string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UpdateMilestoneRequest) Reset() {
	*x = UpdateMilestoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMilestoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMilestoneRequest) ProtoMessage() {}

func (x *UpdateMilestoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMilestoneRequest.ProtoReflect.Descriptor instead.
func (*UpdateMilestoneRequest) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateMilestoneRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *UpdateMilestoneRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *UpdateMilestoneRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type UpdateMilestoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMilestoneResponse) Reset() {
	*x = UpdateMilestoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMilestoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMilestoneResponse) ProtoMessage() {}

func (x *UpdateMilestoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMilestoneResponse.ProtoReflect.Descriptor instead.
func (*UpdateMilestoneResponse) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{19}
}

type CloseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseResponse) Reset() {
	*x = CloseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseResponse) ProtoMessage() {}

func (x *CloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseResponse.ProtoReflect.Descriptor instead.
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{20}
}

type ConfigureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalIp string `protobuf:"bytes,1,opt,name=external_ip,json=externalIp,proto3" json:"external_ip,omitempty"`
}

func (x *ConfigureRequest) Reset() {
	*x = ConfigureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureRequest) ProtoMessage() {}

func (x *ConfigureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureRequest.ProtoReflect.Descriptor instead.
func (*ConfigureRequest) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{21}
}

func (x *ConfigureRequest) GetExternalIp() string {
	if x != nil {
		return x.ExternalIp
	}
	return ""
}

type ConfigureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigureResponse) Reset() {
	*x = ConfigureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_githubcard_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureResponse) ProtoMessage() {}

func (x *ConfigureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_githubcard_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureResponse.ProtoReflect.Descriptor instead.
func (*ConfigureResponse) Descriptor() ([]byte, []int) {
	return file_githubcard_proto_rawDescGZIP(), []int{22}
}

var File_githubcard_proto protoreflect.FileDescriptor

var file_githubcard_proto_rawDesc = []byte{
	0x0a, 0x10, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x22, 0x1d,
	0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3b, 0x0a,
	0x07, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x6c, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x6c, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0xbb, 0x02, 0x0a, 0x06, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x63, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x73, 0x69,
	0x6c, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6a, 0x6f, 0x62, 0x73, 0x5f, 0x6f,
	0x66, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x6a, 0x6f, 0x62, 0x73, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50,
	0x12, 0x29, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x0e, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x54, 0x6f, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x54, 0x6f, 0x49, 0x73, 0x73, 0x75, 0x65, 0x1a, 0x3f, 0x0a, 0x11, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x54, 0x6f, 0x49, 0x73, 0x73, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc6, 0x03, 0x0a, 0x05, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x29, 0x0a,
	0x10, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x5f, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x65, 0x6c, 0x79, 0x22, 0x22, 0x0a, 0x0a, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x01, 0x22, 0x36, 0x0a, 0x06, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x57, 0x45, 0x42, 0x10, 0x01, 0x12, 0x11,
	0x0a, 0x0d, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x52, 0x10,
	0x02, 0x22, 0x36, 0x0a, 0x09, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x0e, 0x53, 0x69,
	0x6c, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x3d,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x69, 0x6c, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x37, 0x0a,
	0x0c, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49,
	0x4c, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x53, 0x49, 0x4c,
	0x45, 0x4e, 0x43, 0x45, 0x10, 0x02, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x76, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x76, 0x6f, 0x69,
	0x64, 0x22, 0x3b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64,
	0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x22, 0x23,
	0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6a, 0x6f, 0x62, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x63, 0x61, 0x72, 0x64, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x05, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x6e, 0x0a, 0x0b, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6a, 0x6f, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x75, 0x6c, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x53, 0x0a, 0x0c, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x22, 0x74, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75,
	0x6c, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x75, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x68, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x68, 0x61, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x61,
	0x0a, 0x13, 0x41, 0x64, 0x64, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70,
	0x6f, 0x22, 0x2e, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x5a, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6c, 0x65, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x19, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x10, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x70, 0x22, 0x13,
	0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0xe3, 0x06, 0x0a, 0x06, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x12, 0x4a,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x08, 0x41, 0x64,
	0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x11, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63,
	0x61, 0x72, 0x64, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x1a, 0x11, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x22, 0x00, 0x12, 0x2d,
	0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x11, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61,
	0x72, 0x64, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x1a, 0x11, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a,
	0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x19, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x63, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x07, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x63, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x4a, 0x6f, 0x62, 0x12, 0x1b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61,
	0x72, 0x64, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x12, 0x19, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63,
	0x61, 0x72, 0x64, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x10, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4d, 0x69, 0x6c,
	0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63,
	0x61, 0x72, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x63, 0x61, 0x72, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x22,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_githubcard_proto_rawDescOnce sync.Once
	file_githubcard_proto_rawDescData = file_githubcard_proto_rawDesc
)

func file_githubcard_proto_rawDescGZIP() []byte {
	file_githubcard_proto_rawDescOnce.Do(func() {
		file_githubcard_proto_rawDescData = protoimpl.X.CompressGZIP(file_githubcard_proto_rawDescData)
	})
	return file_githubcard_proto_rawDescData
}

var file_githubcard_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_githubcard_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_githubcard_proto_goTypes = []interface{}{
	(Issue_IssueState)(0),            // 0: githubcard.Issue.IssueState
	(Issue_Origin)(0),                // 1: githubcard.Issue.Origin
	(SilenceRequest_SilenceState)(0), // 2: githubcard.SilenceRequest.SilenceState
	(*Token)(nil),                    // 3: githubcard.Token
	(*Silence)(nil),                  // 4: githubcard.Silence
	(*Config)(nil),                   // 5: githubcard.Config
	(*Issue)(nil),                    // 6: githubcard.Issue
	(*IssueList)(nil),                // 7: githubcard.IssueList
	(*SilenceRequest)(nil),           // 8: githubcard.SilenceRequest
	(*SilenceResponse)(nil),          // 9: githubcard.SilenceResponse
	(*GetAllRequest)(nil),            // 10: githubcard.GetAllRequest
	(*GetAllResponse)(nil),           // 11: githubcard.GetAllResponse
	(*RegisterRequest)(nil),          // 12: githubcard.RegisterRequest
	(*RegisterResponse)(nil),         // 13: githubcard.RegisterResponse
	(*DeleteRequest)(nil),            // 14: githubcard.DeleteRequest
	(*DeleteResponse)(nil),           // 15: githubcard.DeleteResponse
	(*PullRequest)(nil),              // 16: githubcard.PullRequest
	(*PullResponse)(nil),             // 17: githubcard.PullResponse
	(*CloseRequest)(nil),             // 18: githubcard.CloseRequest
	(*AddMilestoneRequest)(nil),      // 19: githubcard.AddMilestoneRequest
	(*AddMilestoneResponse)(nil),     // 20: githubcard.AddMilestoneResponse
	(*UpdateMilestoneRequest)(nil),   // 21: githubcard.UpdateMilestoneRequest
	(*UpdateMilestoneResponse)(nil),  // 22: githubcard.UpdateMilestoneResponse
	(*CloseResponse)(nil),            // 23: githubcard.CloseResponse
	(*ConfigureRequest)(nil),         // 24: githubcard.ConfigureRequest
	(*ConfigureResponse)(nil),        // 25: githubcard.ConfigureResponse
	nil,                              // 26: githubcard.Config.TitleToIssueEntry
}
var file_githubcard_proto_depIdxs = []int32{
	4,  // 0: githubcard.Config.silences:type_name -> githubcard.Silence
	6,  // 1: githubcard.Config.issues:type_name -> githubcard.Issue
	26, // 2: githubcard.Config.title_to_issue:type_name -> githubcard.Config.TitleToIssueEntry
	0,  // 3: githubcard.Issue.state:type_name -> githubcard.Issue.IssueState
	1,  // 4: githubcard.Issue.origin:type_name -> githubcard.Issue.Origin
	6,  // 5: githubcard.IssueList.issues:type_name -> githubcard.Issue
	2,  // 6: githubcard.SilenceRequest.state:type_name -> githubcard.SilenceRequest.SilenceState
	6,  // 7: githubcard.GetAllResponse.issues:type_name -> githubcard.Issue
	6,  // 8: githubcard.DeleteRequest.issue:type_name -> githubcard.Issue
	24, // 9: githubcard.Github.Configure:input_type -> githubcard.ConfigureRequest
	6,  // 10: githubcard.Github.AddIssue:input_type -> githubcard.Issue
	6,  // 11: githubcard.Github.Get:input_type -> githubcard.Issue
	10, // 12: githubcard.Github.GetAll:input_type -> githubcard.GetAllRequest
	8,  // 13: githubcard.Github.Silence:input_type -> githubcard.SilenceRequest
	12, // 14: githubcard.Github.RegisterJob:input_type -> githubcard.RegisterRequest
	14, // 15: githubcard.Github.DeleteIssue:input_type -> githubcard.DeleteRequest
	16, // 16: githubcard.Github.CreatePullRequest:input_type -> githubcard.PullRequest
	16, // 17: githubcard.Github.GetPullRequest:input_type -> githubcard.PullRequest
	18, // 18: githubcard.Github.ClosePullRequest:input_type -> githubcard.CloseRequest
	19, // 19: githubcard.Github.AddMilestone:input_type -> githubcard.AddMilestoneRequest
	21, // 20: githubcard.Github.UpdateMilestone:input_type -> githubcard.UpdateMilestoneRequest
	25, // 21: githubcard.Github.Configure:output_type -> githubcard.ConfigureResponse
	6,  // 22: githubcard.Github.AddIssue:output_type -> githubcard.Issue
	6,  // 23: githubcard.Github.Get:output_type -> githubcard.Issue
	11, // 24: githubcard.Github.GetAll:output_type -> githubcard.GetAllResponse
	9,  // 25: githubcard.Github.Silence:output_type -> githubcard.SilenceResponse
	13, // 26: githubcard.Github.RegisterJob:output_type -> githubcard.RegisterResponse
	15, // 27: githubcard.Github.DeleteIssue:output_type -> githubcard.DeleteResponse
	17, // 28: githubcard.Github.CreatePullRequest:output_type -> githubcard.PullResponse
	17, // 29: githubcard.Github.GetPullRequest:output_type -> githubcard.PullResponse
	23, // 30: githubcard.Github.ClosePullRequest:output_type -> githubcard.CloseResponse
	20, // 31: githubcard.Github.AddMilestone:output_type -> githubcard.AddMilestoneResponse
	22, // 32: githubcard.Github.UpdateMilestone:output_type -> githubcard.UpdateMilestoneResponse
	21, // [21:33] is the sub-list for method output_type
	9,  // [9:21] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_githubcard_proto_init() }
func file_githubcard_proto_init() {
	if File_githubcard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_githubcard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Silence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Issue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SilenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SilenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMilestoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMilestoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMilestoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMilestoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_githubcard_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_githubcard_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_githubcard_proto_goTypes,
		DependencyIndexes: file_githubcard_proto_depIdxs,
		EnumInfos:         file_githubcard_proto_enumTypes,
		MessageInfos:      file_githubcard_proto_msgTypes,
	}.Build()
	File_githubcard_proto = out.File
	file_githubcard_proto_rawDesc = nil
	file_githubcard_proto_goTypes = nil
	file_githubcard_proto_depIdxs = nil
}
